#! /bin/sh

CC=gcc

tmp_config_h=conf-tmp.$$.config-h
echo '/* generated by ./configure */
' > $tmp_config_h

test_compile_and_link() {
  ok=1
  echo "$1" > conf-tmp-$$.c
  $CC -o /dev/null $LDFLAGS $CFLAGS conf-tmp-$$.c  2> /dev/null || ok=0
}

# Detect system parameters.
cat <<"EOF" > conf-tmp-$$.c
#include <inttypes.h>
#include <stdio.h>
#include <stddef.h>
typedef struct { char c; uint64_t v; } uint64_align_test;
typedef struct { char c; double v; } double_align_test;
typedef struct { char c; void* v; } pointer_align_test;
int main()
{
  printf ("#define DANG_ALIGNOF_INT64 %u\n", (unsigned)offsetof(uint64_align_test, v));
  printf ("#define DANG_ALIGNOF_DOUBLE %u\n", (unsigned)offsetof(double_align_test, v));
  printf ("#define DANG_ALIGNOF_POINTER %u\n", (unsigned)offsetof(pointer_align_test, v));
  printf ("#define DANG_SIZEOF_SIZE_T %u\n", (unsigned)sizeof(size_t));
  printf ("#define DANG_SIZEOF_POINTER %u\n", (unsigned)sizeof(void*));
  return 0;
}
EOF

echo -n "Detecting system sizes... " 1>&2
$CC -o conf-tmp-$$ conf-tmp-$$.c || {
  echo "error compiling configuration test." 1>&2
  exit 1
}
./conf-tmp-$$ >> $tmp_config_h || exit 1
echo "done."

# Detect gsl.
echo -n "Detecting GSL... "
have_gsl=no
if test -z "$GSL_CONFIG" ; then
  GSL_CONFIG=`which gsl-config 2>/dev/null`
fi
test -x "$GSL_CONFIG" && have_gsl=yes
if test "$have_gsl" = yes ; then
  cflags="$cflags `$GSL_CONFIG --cflags`"
  libs="$libs `$GSL_CONFIG --libs`"
  echo "#define HAVE_GSL" >> $tmp_config_h
else
  libs="$libs -lm"
fi
echo "$have_gsl."


# Detect libreadline.
echo -n "Checking for libreadline... "  1>&2
have_readline=no
LDFLAGS='-lreadline -lhistory' \
test_compile_and_link '
#include <readline.h>
#include <history.h>
int main () {  char *str = readline("PROMPT"); add_history(str); return 0; }
'
if test "$ok" = 1; then
  echo "#define HAVE_READLINE" >> $tmp_config_h
  have_readline=yes
else
  LDFLAGS='-lreadline -lhistory' \
  test_compile_and_link '
#include <readline/readline.h>
#include <readline/history.h>
  int main () {  char *str = readline("PROMPT"); add_history(str); return 0; }
  '
  if test "$ok" =  1 ; then
    echo "#define HAVE_READLINE" >> $tmp_config_h
    echo "#define READLINE_HEADER_REQUIRE_PREFIX" >> $tmp_config_h
    have_readline=yes
  fi
fi
if test "$have_readline" = yes ; then
  libs="$libs -lreadline -lhistory"
fi
echo "$have_readline." 1>&2

rm conf-tmp-$$ conf-tmp-$$.c

mv $tmp_config_h config.h

echo "CFG_CFLAGS = $cflags
CFG_LIBS = $libs" > config.mak
